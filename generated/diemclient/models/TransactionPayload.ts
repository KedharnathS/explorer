/**
 * Diem Dev API Specification
 * Diem Dev API is REST API for client applications to interact the Diem blockchain. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MoveModule } from './MoveModule';
import { MoveModuleBytecodePayload } from './MoveModuleBytecodePayload';
import { MoveScriptBytecode } from './MoveScriptBytecode';
import { ScriptFunctionPayload } from './ScriptFunctionPayload';
import { ScriptPayload } from './ScriptPayload';
import { WriteSet } from './WriteSet';
import { WriteSetPayload } from './WriteSetPayload';
import { HttpFile } from '../http/http';

export class TransactionPayload {
    'type': string;
    /**
    * Script function id is string representation of a script function defined on-chain.  Format: `{address}::{module name}::{function name}`  Both `module name` and `function name` are case sensitive. 
    */
    '_function': string;
    'typeArguments': Array<string>;
    'arguments': Array<any>;
    'code': MoveScriptBytecode;
    /**
    * All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Different with `Address` type, hex-encoded bytes should not trim any zeros.
    */
    'bytecode': string;
    'abi'?: MoveModule;
    'writeSet': WriteSet;

    static readonly discriminator: string | undefined = "type";

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "_function",
            "baseName": "function",
            "type": "string",
            "format": ""
        },
        {
            "name": "typeArguments",
            "baseName": "type_arguments",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "arguments",
            "baseName": "arguments",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "MoveScriptBytecode",
            "format": ""
        },
        {
            "name": "bytecode",
            "baseName": "bytecode",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "abi",
            "baseName": "abi",
            "type": "MoveModule",
            "format": ""
        },
        {
            "name": "writeSet",
            "baseName": "write_set",
            "type": "WriteSet",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TransactionPayload.attributeTypeMap;
    }
    
    public constructor() {
        this.type = "TransactionPayload";
    }
}

