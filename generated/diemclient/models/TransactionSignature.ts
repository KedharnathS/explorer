/**
 * Diem Dev API Specification
 * Diem Dev API is REST API for client applications to interact the Diem blockchain. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccountSignature } from './AccountSignature';
import { Ed25519Signature } from './Ed25519Signature';
import { MultiAgentSignature } from './MultiAgentSignature';
import { MultiEd25519Signature } from './MultiEd25519Signature';
import { HttpFile } from '../http/http';

export class TransactionSignature {
    'type': string;
    /**
    * All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Different with `Address` type, hex-encoded bytes should not trim any zeros.
    */
    'publicKey': string;
    /**
    * All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Different with `Address` type, hex-encoded bytes should not trim any zeros.
    */
    'signature': string;
    /**
    * all public keys of the sender account
    */
    'publicKeys': Array<string>;
    /**
    * signatures created based on the `threshold`
    */
    'signatures': Array<string>;
    /**
    * The threshold of the multi ed25519 account key.
    */
    'threshold': number;
    /**
    * All bytes data are represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Different with `Address` type, hex-encoded bytes should not trim any zeros.
    */
    'bitmap': string;
    'sender': AccountSignature;
    'secondarySignerAddresses': Array<string>;
    'secondarySigners': Array<AccountSignature>;

    static readonly discriminator: string | undefined = "type";

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "publicKey",
            "baseName": "public_key",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "signature",
            "baseName": "signature",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "publicKeys",
            "baseName": "public_keys",
            "type": "Array<string>",
            "format": "hex"
        },
        {
            "name": "signatures",
            "baseName": "signatures",
            "type": "Array<string>",
            "format": "hex"
        },
        {
            "name": "threshold",
            "baseName": "threshold",
            "type": "number",
            "format": ""
        },
        {
            "name": "bitmap",
            "baseName": "bitmap",
            "type": "string",
            "format": "hex"
        },
        {
            "name": "sender",
            "baseName": "sender",
            "type": "AccountSignature",
            "format": ""
        },
        {
            "name": "secondarySignerAddresses",
            "baseName": "secondary_signer_addresses",
            "type": "Array<string>",
            "format": "address"
        },
        {
            "name": "secondarySigners",
            "baseName": "secondary_signers",
            "type": "Array<AccountSignature>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TransactionSignature.attributeTypeMap;
    }
    
    public constructor() {
        this.type = "TransactionSignature";
    }
}

